{"version":3,"file":"index.es.js","sources":["../src/useObjectFit.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n/**\n * @param {object} {\n *   type, // \"cover\", \"contain\"\n *   imgUrl,\n *   container: {\n *      ref, // get container size by React ref\n *      dom, // get container size by Dom elm\n *      width, // directly give container size\n *      height\n *   },\n * }\n * @return {object} {\n *    width, // object fit width\n *    height, // object fit hight\n *    offsetX, // object fit offsetX\n *    offsetY, // object fit offsetY\n *    ratio, // origin image ratio\n *    imgWidth,\n *    imgHeight,\n *    containerWidth,\n *    containerHeight,\n * }\n */\nconst useObjectFit = ({\n  type,\n  imgUrl,\n  container: { ref, dom, width: containerWidth, height: containerHeight },\n}) => {\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0,\n    ratio: 0,\n    offsetX: 0,\n    offsetY: 0,\n    imgWidth: 0,\n    imgHeight: 0,\n    containerWidth: 0,\n    containerHeight: 0,\n  });\n\n  useEffect(() => {\n    const targetContainer = ref?.current || dom;\n\n    const targetWidth = containerWidth || targetContainer?.clientWidth;\n    const targetHeight = containerHeight || targetContainer?.clientHeight;\n\n    const targetRatio = targetWidth / targetHeight;\n\n    if (!imgUrl) return;\n    const img = document.createElement(\"img\");\n    img.addEventListener(\"load\", (e) => {\n      const { naturalHeight, naturalWidth } = e.target;\n\n      const ratio = naturalWidth / naturalHeight;\n      let width,\n        height,\n        offsetX = 0,\n        offsetY = 0;\n\n      if (type === \"cover\") {\n        if (ratio >= targetRatio) {\n          const scale = targetHeight / naturalHeight;\n\n          width = naturalWidth * scale;\n          offsetX = (targetWidth - width) / 2;\n          height = targetHeight;\n        } else {\n          const scale = targetWidth / naturalWidth;\n          width = targetWidth;\n          height = naturalHeight * scale;\n          offsetY = (targetHeight - height) / 2;\n        }\n      } else if (type === \"contain\") {\n        if (ratio >= targetRatio) {\n          const scale = targetWidth / naturalWidth;\n          width = targetWidth;\n          height = naturalHeight * scale;\n\n          offsetY = (targetHeight - height) / 2;\n        } else {\n          const scale = targetHeight / naturalHeight;\n          height = targetHeight;\n          width = naturalWidth * scale;\n          offsetX = (targetWidth - width) / 2;\n        }\n      }\n\n      setSize({\n        width,\n        height,\n        ratio,\n        offsetX,\n        offsetY,\n        imgWidth: naturalWidth,\n        imgHeight: naturalHeight,\n        containerWidth: targetWidth,\n        containerHeight: targetHeight,\n      });\n    });\n    img.src = imgUrl;\n  }, [type, imgUrl, ref, dom, containerWidth, containerHeight]);\n\n  return size;\n};\n\nexport default useObjectFit;\n"],"names":["useObjectFit","type","imgUrl","container","ref","dom","containerWidth","width","containerHeight","height","useState","ratio","offsetX","offsetY","imgWidth","imgHeight","size","setSize","useEffect","targetContainer","current","targetWidth","clientWidth","targetHeight","clientHeight","targetRatio","img","document","createElement","addEventListener","e","target","naturalHeight","naturalWidth","src"],"mappings":"ogCAyBMA,EAAe,gBACnBC,IAAAA,KACAC,IAAAA,WACAC,UAAaC,IAAAA,IAAKC,IAAAA,IAAYC,IAAPC,MAA+BC,IAARC,WAEtBC,EAAS,CAC/BH,MAAO,EACPE,OAAQ,EACRE,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,UAAW,EACXT,eAAgB,EAChBE,gBAAiB,OATZQ,OAAMC,cAYbC,GAAU,eACFC,GAAkBf,MAAAA,SAAAA,EAAKgB,UAAWf,EAElCgB,EAAcf,IAAkBa,MAAAA,SAAAA,EAAiBG,aACjDC,EAAef,IAAmBW,MAAAA,SAAAA,EAAiBK,cAEnDC,EAAcJ,EAAcE,KAE7BrB,OACCwB,EAAMC,SAASC,cAAc,OACnCF,EAAIG,iBAAiB,QAAQ,SAACC,OAIxBvB,EACFE,IAJsCqB,EAAEC,OAAlCC,IAAAA,cAAeC,IAAAA,aAEjBtB,EAAQsB,EAAeD,EAG3BpB,EAAU,EACVC,EAAU,KAEC,UAATZ,EACEU,GAASc,GAIXb,GAAWS,GADXd,EAAQ0B,GAFMV,EAAeS,KAGK,EAClCvB,EAASc,IAGThB,EAAQc,EAERR,GAAWU,GADXd,EAASuB,GAFKX,EAAcY,KAGQ,QAEjC,GAAa,YAAThC,EAAoB,IACzBU,GAASc,EAEXlB,EAAQc,EAGRR,GAAWU,GAFXd,EAASuB,GAFKX,EAAcY,KAIQ,OAGpCxB,EAASc,EAETX,GAAWS,GADXd,EAAQ0B,GAFMV,EAAeS,KAGK,EAItCf,EAAQ,CACNV,MAAAA,EACAE,OAAAA,EACAE,MAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAC,SAAUmB,EACVlB,UAAWiB,EACX1B,eAAgBe,EAChBb,gBAAiBe,OAGrBG,EAAIQ,IAAMhC,KACT,CAACD,EAAMC,EAAQE,EAAKC,EAAKC,EAAgBE,IAErCQ"}